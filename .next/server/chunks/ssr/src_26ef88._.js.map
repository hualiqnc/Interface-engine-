{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n    \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n    {\n        variants: {\n            variant: {\n                default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n                destructive:\n                    \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n                outline:\n                    \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n                secondary:\n                    \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n                ghost: \"hover:bg-accent hover:text-accent-foreground\",\n                link: \"text-primary underline-offset-4 hover:underline\",\n            },\n            size: {\n                default: \"h-10 px-4 py-2\",\n                sm: \"h-9 rounded-md px-3\",\n                lg: \"h-11 rounded-md px-8\",\n                icon: \"h-10 w-10\",\n            },\n        },\n        defaultVariants: {\n            variant: \"default\",\n            size: \"default\",\n        },\n    }\n)\n\nexport interface ButtonProps\n    extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n    asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    ({ className, variant, size, asChild = false, ...props }, ref) => {\n        const Comp = asChild ? Slot : \"button\"\n        return (\n            <Comp\n                className={cn(buttonVariants({ variant, size, className }))}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACrB,wQACA;IACI,UAAU;QACN,SAAS;YACL,SAAS;YACT,aACI;YACJ,SACI;YACJ,WACI;YACJ,OAAO;YACP,MAAM;QACV;QACA,MAAM;YACF,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACV;IACJ;IACA,iBAAiB;QACb,SAAS;QACT,MAAM;IACV;AACJ;AASJ,MAAM,uBAAS,sMAAM,UAAU,CAC3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACtD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACI,8OAAC;QACG,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n    extends React.TextareaHTMLAttributes<HTMLTextAreaElement> { }\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n    ({ className, ...props }, ref) => {\n        return (\n            <textarea\n                className={cn(\n                    \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,yBAAW,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACtB,qBACI,8OAAC;QACG,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,wSACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/radio-group.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n    React.ElementRef<typeof RadioGroupPrimitive.Root>,\n    React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n    return (\n        <RadioGroupPrimitive.Root\n            className={cn(\"grid gap-2\", className)}\n            {...props}\n            ref={ref}\n        />\n    )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n    React.ElementRef<typeof RadioGroupPrimitive.Item>,\n    React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n    return (\n        <RadioGroupPrimitive.Item\n            ref={ref}\n            className={cn(\n                \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                className\n            )}\n            {...props}\n        >\n            <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n                <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n            </RadioGroupPrimitive.Indicator>\n        </RadioGroupPrimitive.Item>\n    )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }"],"names":[],"mappings":";;;;;AAAA;AAGA;AAFA;AACA;;;;;;AAGA,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACI,8OAAC,2KAAoB,IAAI;QACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGjB;AACA,WAAW,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW;AAE7D,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACI,8OAAC,2KAAoB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,4OACA;QAEH,GAAG,KAAK;kBAET,cAAA,8OAAC,2KAAoB,SAAS;YAAC,WAAU;sBACrC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIlC;AACA,eAAe,WAAW,GAAG,2KAAoB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n    \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n    React.ElementRef<typeof LabelPrimitive.Root>,\n    React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n    <LabelPrimitive.Root\n        ref={ref}\n        className={cn(labelVariants(), className)}\n        {...props}\n    />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACpB;AAGJ,MAAM,sBAAQ,sMAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,kKAAe,IAAI;QAChB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGjB,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div\n        ref={ref}\n        className={cn(\n            \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n            className\n        )}\n        {...props}\n    />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div\n        ref={ref}\n        className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n        {...props}\n    />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n    HTMLParagraphElement,\n    React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n    <h3\n        ref={ref}\n        className={cn(\n            \"text-2xl font-semibold leading-none tracking-tight\",\n            className\n        )}\n        {...props}\n    />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n    HTMLParagraphElement,\n    React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n    <p\n        ref={ref}\n        className={cn(\"text-sm text-muted-foreground\", className)}\n        {...props}\n    />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n    HTMLDivElement,\n    React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n    <div\n        ref={ref}\n        className={cn(\"flex items-center p-6 pt-0\", className)}\n        {...props}\n    />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,4DACA;QAEH,GAAG,KAAK;;;;;;AAGjB,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGjB,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,sDACA;QAEH,GAAG,KAAK;;;;;;AAGjB,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGjB,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAElE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACG,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGjB,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,sMAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,sMAAM,UAAU,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,iKAAc,IAAI;AAE/B,MAAM,yBAAW,sMAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,iKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,kBAAkB,oKAAiB,QAAQ;AAEjD,MAAM,UAAU,oKAAiB,IAAI;AAErC,MAAM,iBAAiB,oKAAiB,OAAO;AAE/C,MAAM,+BAAiB,sMAAM,UAAU,CAGrC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,oKAAiB,OAAO;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,oKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/lib/inference.ts"],"sourcesContent":["type Clause = {\n    antecedents: Expression[]\n    consequent: Expression\n}\n\ntype Expression = {\n    type: 'LITERAL' | 'NEGATION' | 'DISJUNCTION' | 'BICONDITIONAL'\n    value: string | Expression | Expression[]\n}\n\ntype KnowledgeBase = {\n    facts: Set<string>\n    rules: Clause[]\n}\n\nfunction parseExpression(expr: string): Expression {\n    expr = expr.trim()\n    \n    // Handle negation\n    if (expr.startsWith('~')) {\n        return {\n            type: 'NEGATION',\n            value: parseExpression(expr.slice(1))\n        }\n    }\n    \n    // Handle disjunction\n    if (expr.includes('||')) {\n        return {\n            type: 'DISJUNCTION',\n            value: expr.split('||').map(e => parseExpression(e.trim()))\n        }\n    }\n    \n    // Handle biconditional\n    if (expr.includes('<=>')) {\n        const [left, right] = expr.split('<=>').map(e => parseExpression(e.trim()))\n        return {\n            type: 'BICONDITIONAL',\n            value: [left, right]\n        }\n    }\n    \n    // Simple literal\n    return {\n        type: 'LITERAL',\n        value: expr\n    }\n}\n\nexport function parseInput(input: string): { kb: KnowledgeBase; query: string } {\n    const lines = input.split('\\n')\n    const kb: KnowledgeBase = { facts: new Set(), rules: [] }\n    let query = ''\n\n    let isTell = false\n    let isAsk = false\n\n    for (const line of lines) {\n        if (line.trim() === 'TELL') {\n            isTell = true\n            continue\n        } else if (line.trim() === 'ASK') {\n            isTell = false\n            isAsk = true\n            continue\n        }\n\n        if (isTell) {\n            const clauses = line.split(';').map((c) => c.trim()).filter((c) => c)\n            for (const clause of clauses) {\n                if (clause.includes('=>')) {\n                    const [antecedentsStr, consequentStr] = clause.split('=>').map((s) => s.trim())\n                    const antecedents = antecedentsStr.split('&').map((s) => parseExpression(s.trim()))\n                    const consequent = parseExpression(consequentStr)\n                    kb.rules.push({ antecedents, consequent })\n                } else {\n                    // Handle facts with new operators\n                    const expr = parseExpression(clause)\n                    if (expr.type === 'LITERAL') {\n                        kb.facts.add(expr.value as string)\n                    } else {\n                        kb.rules.push({ antecedents: [], consequent: expr })\n                    }\n                }\n            }\n        } else if (isAsk) {\n            query = line.trim()\n        }\n    }\n\n    return { kb, query }\n}\n\nfunction evaluateExpression(expr: Expression, assignment: Record<string, boolean>): boolean {\n    switch (expr.type) {\n        case 'LITERAL':\n            return assignment[expr.value as string] || false\n            \n        case 'NEGATION':\n            return !evaluateExpression(expr.value as Expression, assignment)\n            \n        case 'DISJUNCTION':\n            return (expr.value as Expression[]).some(e => evaluateExpression(e, assignment))\n            \n        case 'BICONDITIONAL':\n            const [left, right] = expr.value as Expression[]\n            const leftValue = evaluateExpression(left, assignment)\n            const rightValue = evaluateExpression(right, assignment)\n            return leftValue === rightValue\n            \n        default:\n            return false\n    }\n}\n\nfunction evaluateKB(kb: KnowledgeBase, assignment: Record<string, boolean>): boolean {\n    // Evaluate facts\n    for (const fact of kb.facts) {\n        if (!assignment[fact]) return false\n    }\n\n    // Evaluate rules\n    for (const rule of kb.rules) {\n        const antecedentsTrue = rule.antecedents.every(ant => \n            evaluateExpression(ant, assignment)\n        )\n        const consequentTrue = evaluateExpression(rule.consequent, assignment)\n        \n        if (antecedentsTrue && !consequentTrue) {\n            return false\n        }\n    }\n\n    return true\n}\n\nexport function TruthTable(kb: KnowledgeBase, query: string): string {\n    const symbols = new Set<string>()\n    kb.facts.forEach(fact => symbols.add(fact))\n    kb.rules.forEach(rule => {\n        rule.antecedents.forEach(ant => {\n            if (ant.type === 'LITERAL') symbols.add(ant.value as string)\n        })\n        if (rule.consequent.type === 'LITERAL') symbols.add(rule.consequent.value as string)\n    })\n    symbols.add(query)\n\n    const symbolList = Array.from(symbols)\n\n    function generateTruthTable(n: number): boolean[][] {\n        if (n === 0) return [[]]\n        const subTable = generateTruthTable(n - 1)\n        return [...subTable.map(row => [false, ...row]), ...subTable.map(row => [true, ...row])]\n    }\n\n    const table = generateTruthTable(symbolList.length)\n    let modelCount = 0\n    let totalModels = 0\n\n    for (const row of table) {\n        const assignment = Object.fromEntries(symbolList.map((sym, i) => [sym, row[i]]))\n        if (evaluateKB(kb, assignment)) {\n            totalModels++\n            if (assignment[query]) {\n                modelCount++\n            }\n        }\n    }\n\n    return modelCount > 0 ? `YES: ${modelCount}` : 'NO'\n}\n\nfunction isHornClause(rule: Clause): boolean {\n    // A Horn clause can only have one positive literal (consequent)\n    // All antecedents must be positive literals\n    return rule.antecedents.every(ant => \n        ant.type === 'LITERAL' && \n        typeof ant.value === 'string'\n    ) && \n    rule.consequent.type === 'LITERAL' && \n    typeof rule.consequent.value === 'string'\n}\n\nfunction isHornKB(kb: KnowledgeBase): boolean {\n    // Check if all rules are Horn clauses\n    return kb.rules.every(isHornClause)\n}\n\nexport function ForwardChaining(kb: KnowledgeBase, query: string): string {\n    // First check if KB is in Horn form\n    if (!isHornKB(kb)) {\n        return \"NO: Knowledge base is not in Horn form. Use Truth Table method instead.\"\n    }\n\n    const entailed = new Set(kb.facts)\n    const agenda = [...kb.facts]\n    const steps: string[] = []\n    let stepCount = 1\n\n    // Check if query is in initial facts\n    if (entailed.has(query)) {\n        return `YES: ${[...entailed].join(', ')}\\n\\nReasoning:\\nQuery '${query}' was found in initial facts.`\n    }\n\n    while (agenda.length > 0) {\n        const p = agenda.pop()!\n        steps.push(`${stepCount}. Examining fact: ${p}`)\n        stepCount++\n\n        if (p === query) {\n            return `YES: ${[...entailed].join(', ')}\\n\\nReasoning:\\n${steps.join('\\n')}\\n\\nExplanation:\\nStarting from initial facts, we applied Horn rules to derive new facts until we found '${query}'.`\n        }\n\n        // Try to derive new facts using Horn rules\n        for (const rule of kb.rules) {\n            const consequentValue = rule.consequent.value as string\n            \n            if (consequentValue === query && entailed.has(query)) {\n                continue\n            }\n\n            // Check if all antecedents are satisfied\n            if (rule.antecedents.every(ant => entailed.has(ant.value as string)) && \n                !entailed.has(consequentValue)) {\n                entailed.add(consequentValue)\n                agenda.push(consequentValue)\n                steps.push(`${stepCount}. Applied Horn rule: ${rule.antecedents.map(a => a.value).join(' & ')} => ${consequentValue}`)\n                stepCount++\n\n                if (consequentValue === query) {\n                    return `YES: ${[...entailed].join(', ')}\\n\\nReasoning:\\n${steps.join('\\n')}\\n\\nExplanation:\\nStarting from initial facts, we applied Horn rules to derive new facts until we found '${query}'.`\n                }\n            }\n        }\n    }\n\n    return `NO\\n\\nReasoning:\\n${steps.join('\\n')}\\n\\nExplanation:\\nAfter exhausting all possible Horn rule inferences, we could not derive '${query}'.`\n}\n\nexport function BackwardChaining(kb: KnowledgeBase, query: string): string {\n    // First check if KB is in Horn form\n    if (!isHornKB(kb)) {\n        return \"NO: Knowledge base is not in Horn form. Use Truth Table method instead.\"\n    }\n\n    const entailed = new Set<string>()\n    const steps: string[] = []\n    let stepCount = 1\n\n    function backchain(goal: string, visited: Set<string>): boolean {\n        if (visited.has(goal)) {\n            steps.push(`${stepCount++}. Skipping ${goal} (already visited)`)\n            return false\n        }\n        visited.add(goal)\n        steps.push(`${stepCount++}. Attempting to prove Horn clause goal: ${goal}`)\n\n        if (kb.facts.has(goal)) {\n            steps.push(`${stepCount++}. Found ${goal} in facts`)\n            entailed.add(goal)\n            return true\n        }\n\n        // Only consider Horn rules\n        for (const rule of kb.rules) {\n            if (rule.consequent.value === goal) {\n                steps.push(`${stepCount++}. Found Horn rule: ${rule.antecedents.map(a => a.value).join(' & ')} => ${goal}`)\n                if (rule.antecedents.every(ant => backchain(ant.value as string, new Set(visited)))) {\n                    entailed.add(goal)\n                    steps.push(`${stepCount++}. Successfully proved ${goal} using Horn rule`)\n                    return true\n                }\n            }\n        }\n\n        steps.push(`${stepCount++}. Failed to prove ${goal} using Horn rules`)\n        return false\n    }\n\n    const result = backchain(query, new Set())\n    return result \n        ? `YES: ${[...entailed].join(', ')}\\n\\nReasoning:\\n${steps.join('\\n')}\\n\\nExplanation:\\nWorking backwards from the query '${query}', we successfully proved all required subgoals using Horn rules.`\n        : `NO\\n\\nReasoning:\\n${steps.join('\\n')}\\n\\nExplanation:\\nWorking backwards from '${query}', we could not establish a complete proof chain using Horn rules.`\n}"],"names":[],"mappings":";;;;;;AAeA,SAAS,gBAAgB,IAAY;IACjC,OAAO,KAAK,IAAI;IAEhB,kBAAkB;IAClB,IAAI,KAAK,UAAU,CAAC,MAAM;QACtB,OAAO;YACH,MAAM;YACN,OAAO,gBAAgB,KAAK,KAAK,CAAC;QACtC;IACJ;IAEA,qBAAqB;IACrB,IAAI,KAAK,QAAQ,CAAC,OAAO;QACrB,OAAO;YACH,MAAM;YACN,OAAO,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA,IAAK,gBAAgB,EAAE,IAAI;QAC3D;IACJ;IAEA,uBAAuB;IACvB,IAAI,KAAK,QAAQ,CAAC,QAAQ;QACtB,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,KAAK,CAAC,OAAO,GAAG,CAAC,CAAA,IAAK,gBAAgB,EAAE,IAAI;QACvE,OAAO;YACH,MAAM;YACN,OAAO;gBAAC;gBAAM;aAAM;QACxB;IACJ;IAEA,iBAAiB;IACjB,OAAO;QACH,MAAM;QACN,OAAO;IACX;AACJ;AAEO,SAAS,WAAW,KAAa;IACpC,MAAM,QAAQ,MAAM,KAAK,CAAC;IAC1B,MAAM,KAAoB;QAAE,OAAO,IAAI;QAAO,OAAO,EAAE;IAAC;IACxD,IAAI,QAAQ;IAEZ,IAAI,SAAS;IACb,IAAI,QAAQ;IAEZ,KAAK,MAAM,QAAQ,MAAO;QACtB,IAAI,KAAK,IAAI,OAAO,QAAQ;YACxB,SAAS;YACT;QACJ,OAAO,IAAI,KAAK,IAAI,OAAO,OAAO;YAC9B,SAAS;YACT,QAAQ;YACR;QACJ;QAEA,IAAI,QAAQ;YACR,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IAAI,MAAM,CAAC,CAAC,IAAM;YACnE,KAAK,MAAM,UAAU,QAAS;gBAC1B,IAAI,OAAO,QAAQ,CAAC,OAAO;oBACvB,MAAM,CAAC,gBAAgB,cAAc,GAAG,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI;oBAC5E,MAAM,cAAc,eAAe,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,gBAAgB,EAAE,IAAI;oBAC/E,MAAM,aAAa,gBAAgB;oBACnC,GAAG,KAAK,CAAC,IAAI,CAAC;wBAAE;wBAAa;oBAAW;gBAC5C,OAAO;oBACH,kCAAkC;oBAClC,MAAM,OAAO,gBAAgB;oBAC7B,IAAI,KAAK,IAAI,KAAK,WAAW;wBACzB,GAAG,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK;oBAC3B,OAAO;wBACH,GAAG,KAAK,CAAC,IAAI,CAAC;4BAAE,aAAa,EAAE;4BAAE,YAAY;wBAAK;oBACtD;gBACJ;YACJ;QACJ,OAAO,IAAI,OAAO;YACd,QAAQ,KAAK,IAAI;QACrB;IACJ;IAEA,OAAO;QAAE;QAAI;IAAM;AACvB;AAEA,SAAS,mBAAmB,IAAgB,EAAE,UAAmC;IAC7E,OAAQ,KAAK,IAAI;QACb,KAAK;YACD,OAAO,UAAU,CAAC,KAAK,KAAK,CAAW,IAAI;QAE/C,KAAK;YACD,OAAO,CAAC,mBAAmB,KAAK,KAAK,EAAgB;QAEzD,KAAK;YACD,OAAO,AAAC,KAAK,KAAK,CAAkB,IAAI,CAAC,CAAA,IAAK,mBAAmB,GAAG;QAExE,KAAK;YACD,MAAM,CAAC,MAAM,MAAM,GAAG,KAAK,KAAK;YAChC,MAAM,YAAY,mBAAmB,MAAM;YAC3C,MAAM,aAAa,mBAAmB,OAAO;YAC7C,OAAO,cAAc;QAEzB;YACI,OAAO;IACf;AACJ;AAEA,SAAS,WAAW,EAAiB,EAAE,UAAmC;IACtE,iBAAiB;IACjB,KAAK,MAAM,QAAQ,GAAG,KAAK,CAAE;QACzB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,OAAO;IAClC;IAEA,iBAAiB;IACjB,KAAK,MAAM,QAAQ,GAAG,KAAK,CAAE;QACzB,MAAM,kBAAkB,KAAK,WAAW,CAAC,KAAK,CAAC,CAAA,MAC3C,mBAAmB,KAAK;QAE5B,MAAM,iBAAiB,mBAAmB,KAAK,UAAU,EAAE;QAE3D,IAAI,mBAAmB,CAAC,gBAAgB;YACpC,OAAO;QACX;IACJ;IAEA,OAAO;AACX;AAEO,SAAS,WAAW,EAAiB,EAAE,KAAa;IACvD,MAAM,UAAU,IAAI;IACpB,GAAG,KAAK,CAAC,OAAO,CAAC,CAAA,OAAQ,QAAQ,GAAG,CAAC;IACrC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAA;QACb,KAAK,WAAW,CAAC,OAAO,CAAC,CAAA;YACrB,IAAI,IAAI,IAAI,KAAK,WAAW,QAAQ,GAAG,CAAC,IAAI,KAAK;QACrD;QACA,IAAI,KAAK,UAAU,CAAC,IAAI,KAAK,WAAW,QAAQ,GAAG,CAAC,KAAK,UAAU,CAAC,KAAK;IAC7E;IACA,QAAQ,GAAG,CAAC;IAEZ,MAAM,aAAa,MAAM,IAAI,CAAC;IAE9B,SAAS,mBAAmB,CAAS;QACjC,IAAI,MAAM,GAAG,OAAO;YAAC,EAAE;SAAC;QACxB,MAAM,WAAW,mBAAmB,IAAI;QACxC,OAAO;eAAI,SAAS,GAAG,CAAC,CAAA,MAAO;oBAAC;uBAAU;iBAAI;eAAM,SAAS,GAAG,CAAC,CAAA,MAAO;oBAAC;uBAAS;iBAAI;SAAE;IAC5F;IAEA,MAAM,QAAQ,mBAAmB,WAAW,MAAM;IAClD,IAAI,aAAa;IACjB,IAAI,cAAc;IAElB,KAAK,MAAM,OAAO,MAAO;QACrB,MAAM,aAAa,OAAO,WAAW,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,IAAM;gBAAC;gBAAK,GAAG,CAAC,EAAE;aAAC;QAC9E,IAAI,WAAW,IAAI,aAAa;YAC5B;YACA,IAAI,UAAU,CAAC,MAAM,EAAE;gBACnB;YACJ;QACJ;IACJ;IAEA,OAAO,aAAa,IAAI,CAAC,KAAK,EAAE,YAAY,GAAG;AACnD;AAEA,SAAS,aAAa,IAAY;IAC9B,gEAAgE;IAChE,4CAA4C;IAC5C,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,CAAA,MAC1B,IAAI,IAAI,KAAK,aACb,OAAO,IAAI,KAAK,KAAK,aAEzB,KAAK,UAAU,CAAC,IAAI,KAAK,aACzB,OAAO,KAAK,UAAU,CAAC,KAAK,KAAK;AACrC;AAEA,SAAS,SAAS,EAAiB;IAC/B,sCAAsC;IACtC,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC;AAC1B;AAEO,SAAS,gBAAgB,EAAiB,EAAE,KAAa;IAC5D,oCAAoC;IACpC,IAAI,CAAC,SAAS,KAAK;QACf,OAAO;IACX;IAEA,MAAM,WAAW,IAAI,IAAI,GAAG,KAAK;IACjC,MAAM,SAAS;WAAI,GAAG,KAAK;KAAC;IAC5B,MAAM,QAAkB,EAAE;IAC1B,IAAI,YAAY;IAEhB,qCAAqC;IACrC,IAAI,SAAS,GAAG,CAAC,QAAQ;QACrB,OAAO,CAAC,KAAK,EAAE;eAAI;SAAS,CAAC,IAAI,CAAC,MAAM,uBAAuB,EAAE,MAAM,6BAA6B,CAAC;IACzG;IAEA,MAAO,OAAO,MAAM,GAAG,EAAG;QACtB,MAAM,IAAI,OAAO,GAAG;QACpB,MAAM,IAAI,CAAC,GAAG,UAAU,kBAAkB,EAAE,GAAG;QAC/C;QAEA,IAAI,MAAM,OAAO;YACb,OAAO,CAAC,KAAK,EAAE;mBAAI;aAAS,CAAC,IAAI,CAAC,MAAM,gBAAgB,EAAE,MAAM,IAAI,CAAC,MAAM,yGAAyG,EAAE,MAAM,EAAE,CAAC;QACnM;QAEA,2CAA2C;QAC3C,KAAK,MAAM,QAAQ,GAAG,KAAK,CAAE;YACzB,MAAM,kBAAkB,KAAK,UAAU,CAAC,KAAK;YAE7C,IAAI,oBAAoB,SAAS,SAAS,GAAG,CAAC,QAAQ;gBAClD;YACJ;YAEA,yCAAyC;YACzC,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC,CAAA,MAAO,SAAS,GAAG,CAAC,IAAI,KAAK,MACpD,CAAC,SAAS,GAAG,CAAC,kBAAkB;gBAChC,SAAS,GAAG,CAAC;gBACb,OAAO,IAAI,CAAC;gBACZ,MAAM,IAAI,CAAC,GAAG,UAAU,qBAAqB,EAAE,KAAK,WAAW,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE,iBAAiB;gBACrH;gBAEA,IAAI,oBAAoB,OAAO;oBAC3B,OAAO,CAAC,KAAK,EAAE;2BAAI;qBAAS,CAAC,IAAI,CAAC,MAAM,gBAAgB,EAAE,MAAM,IAAI,CAAC,MAAM,yGAAyG,EAAE,MAAM,EAAE,CAAC;gBACnM;YACJ;QACJ;IACJ;IAEA,OAAO,CAAC,kBAAkB,EAAE,MAAM,IAAI,CAAC,MAAM,2FAA2F,EAAE,MAAM,EAAE,CAAC;AACvJ;AAEO,SAAS,iBAAiB,EAAiB,EAAE,KAAa;IAC7D,oCAAoC;IACpC,IAAI,CAAC,SAAS,KAAK;QACf,OAAO;IACX;IAEA,MAAM,WAAW,IAAI;IACrB,MAAM,QAAkB,EAAE;IAC1B,IAAI,YAAY;IAEhB,SAAS,UAAU,IAAY,EAAE,OAAoB;QACjD,IAAI,QAAQ,GAAG,CAAC,OAAO;YACnB,MAAM,IAAI,CAAC,GAAG,YAAY,WAAW,EAAE,KAAK,kBAAkB,CAAC;YAC/D,OAAO;QACX;QACA,QAAQ,GAAG,CAAC;QACZ,MAAM,IAAI,CAAC,GAAG,YAAY,wCAAwC,EAAE,MAAM;QAE1E,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO;YACpB,MAAM,IAAI,CAAC,GAAG,YAAY,QAAQ,EAAE,KAAK,SAAS,CAAC;YACnD,SAAS,GAAG,CAAC;YACb,OAAO;QACX;QAEA,2BAA2B;QAC3B,KAAK,MAAM,QAAQ,GAAG,KAAK,CAAE;YACzB,IAAI,KAAK,UAAU,CAAC,KAAK,KAAK,MAAM;gBAChC,MAAM,IAAI,CAAC,GAAG,YAAY,mBAAmB,EAAE,KAAK,WAAW,CAAC,GAAG,CAAC,CAAA,IAAK,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,IAAI,EAAE,MAAM;gBAC1G,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC,CAAA,MAAO,UAAU,IAAI,KAAK,EAAY,IAAI,IAAI,YAAY;oBACjF,SAAS,GAAG,CAAC;oBACb,MAAM,IAAI,CAAC,GAAG,YAAY,sBAAsB,EAAE,KAAK,gBAAgB,CAAC;oBACxE,OAAO;gBACX;YACJ;QACJ;QAEA,MAAM,IAAI,CAAC,GAAG,YAAY,kBAAkB,EAAE,KAAK,iBAAiB,CAAC;QACrE,OAAO;IACX;IAEA,MAAM,SAAS,UAAU,OAAO,IAAI;IACpC,OAAO,SACD,CAAC,KAAK,EAAE;WAAI;KAAS,CAAC,IAAI,CAAC,MAAM,gBAAgB,EAAE,MAAM,IAAI,CAAC,MAAM,oDAAoD,EAAE,MAAM,iEAAiE,CAAC,GAClM,CAAC,kBAAkB,EAAE,MAAM,IAAI,CAAC,MAAM,0CAA0C,EAAE,MAAM,kEAAkE,CAAC;AACrK"}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/KnowledgeBaseGraph.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useCallback } from 'react'\nimport ReactFlow, { Background, Controls, Edge, Node, useNodesState, useEdgesState } from 'reactflow'\nimport 'reactflow/dist/style.css'\nimport { parseInput } from '@/lib/inference'\n\ninterface KnowledgeBaseGraphProps {\n    input: string\n}\n\nexport default function KnowledgeBaseGraph({ input }: KnowledgeBaseGraphProps) {\n    const [nodes, setNodes, onNodesChange] = useNodesState([])\n    const [edges, setEdges, onEdgesChange] = useEdgesState([])\n\n    const calculateLayout = useCallback((kb: any) => {\n        const nodeSet = new Set<string>()\n        const nodeList: Node[] = []\n        const edgeList: Edge[] = []\n        \n        // Parse the query from input\n        const query = input.split('ASK')[1]?.trim() || ''\n\n        // First pass: collect all unique nodes\n        if (kb.facts) {\n            kb.facts.forEach((fact: string) => nodeSet.add(fact))\n        }\n        \n        if (kb.rules) {\n            kb.rules.forEach((rule: any) => {\n                if (rule.antecedents) {\n                    rule.antecedents.forEach((ant: any) => {\n                        if (ant.type === 'LITERAL') {\n                            nodeSet.add(ant.value as string)\n                        }\n                    })\n                }\n                if (rule.consequent && rule.consequent.type === 'LITERAL') {\n                    nodeSet.add(rule.consequent.value as string)\n                }\n            })\n        }\n\n        // Calculate grid dimensions and spacing\n        const totalNodes = nodeSet.size\n        const columns = Math.ceil(Math.sqrt(totalNodes))\n        const rows = Math.ceil(totalNodes / columns)\n        const viewportWidth = typeof window !== 'undefined' ? window.innerWidth * 0.8 : 800\n        const viewportHeight = 400\n        const spacingX = viewportWidth / (columns + 1)\n        const spacingY = viewportHeight / (rows + 1)\n\n        // Create nodes with calculated positions\n        let row = 0\n        let col = 0\n        let nodeId = 0\n        nodeSet.forEach((node) => {\n            const isQuery = node === query\n            const isFact = kb.facts?.has(node)\n            \n            nodeList.push({\n                id: `node-${nodeId}-${node}`,\n                data: { label: node },\n                position: {\n                    x: (col + 1) * spacingX,\n                    y: (row + 1) * spacingY\n                },\n                className: `rounded px-4 py-2 ${\n                    isQuery \n                        ? 'bg-primary text-primary-foreground font-bold text-lg transform scale-125' \n                        : isFact\n                            ? 'bg-primary text-primary-foreground'\n                            : 'bg-secondary text-secondary-foreground'\n                }`\n            })\n\n            col++\n            if (col >= columns) {\n                col = 0\n                row++\n            }\n            nodeId++\n        })\n\n        // Create edges (rest of the code remains the same)\n        let edgeId = 0\n        kb.rules?.forEach((rule: any) => {\n            if (rule.antecedents && rule.consequent?.type === 'LITERAL') {\n                rule.antecedents.forEach((ant: any) => {\n                    if (ant.type === 'LITERAL') {\n                        edgeList.push({\n                            id: `edge-${edgeId++}`,\n                            source: `node-${nodeList.findIndex(n => n.data.label === ant.value)}-${ant.value}`,\n                            target: `node-${nodeList.findIndex(n => n.data.label === rule.consequent.value)}-${rule.consequent.value}`,\n                            className: 'animate-pulse'\n                        })\n                    }\n                })\n            }\n        })\n\n        return { nodes: nodeList, edges: edgeList }\n    }, [input])\n\n    useEffect(() => {\n        try {\n            const { kb } = parseInput(input)\n            const { nodes: newNodes, edges: newEdges } = calculateLayout(kb)\n            setNodes(newNodes)\n            setEdges(newEdges)\n        } catch (error) {\n            console.error('Error parsing input for visualization:', error)\n        }\n    }, [input, calculateLayout, setNodes, setEdges])\n\n    return (\n        <div className=\"w-full h-[400px] relative\">\n            <ReactFlow\n                nodes={nodes}\n                edges={edges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                fitView\n                fitViewOptions={{ padding: 0.2 }}\n                className=\"bg-background\"\n            >\n                <Background />\n                <Controls />\n            </ReactFlow>\n        </div>\n    )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 858, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/lib/performance.ts"],"sourcesContent":["export interface PerformanceMetrics {\n    averageTime: number;\n    maxTime: number;\n    minTime: number;\n    successRate: number;\n    totalIterations: number;\n}\n\nexport async function benchmarkInference(\n    input: string,\n    method: string,\n    iterations: number = 100\n): Promise<PerformanceMetrics> {\n    const times: number[] = []\n    let successes = 0\n\n    for (let i = 0; i < iterations; i++) {\n        const start = performance.now()\n        \n        const response = await fetch('/api/infer', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ input, method }),\n        })\n        \n        const data = await response.json()\n        const end = performance.now()\n        \n        times.push(end - start)\n        if (data.result.startsWith('YES')) successes++\n    }\n\n    return {\n        averageTime: times.reduce((a, b) => a + b) / times.length,\n        maxTime: Math.max(...times),\n        minTime: Math.min(...times),\n        successRate: (successes / iterations) * 100,\n        totalIterations: iterations\n    }\n} "],"names":[],"mappings":";;;AAQO,eAAe,mBAClB,KAAa,EACb,MAAc,EACd,aAAqB,GAAG;IAExB,MAAM,QAAkB,EAAE;IAC1B,IAAI,YAAY;IAEhB,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;QACjC,MAAM,QAAQ,YAAY,GAAG;QAE7B,MAAM,WAAW,MAAM,MAAM,cAAc;YACvC,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAO;QACzC;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,MAAM,MAAM,YAAY,GAAG;QAE3B,MAAM,IAAI,CAAC,MAAM;QACjB,IAAI,KAAK,MAAM,CAAC,UAAU,CAAC,QAAQ;IACvC;IAEA,OAAO;QACH,aAAa,MAAM,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,KAAK,MAAM,MAAM;QACzD,SAAS,KAAK,GAAG,IAAI;QACrB,SAAS,KAAK,GAAG,IAAI;QACrB,aAAa,AAAC,YAAY,aAAc;QACxC,iBAAiB;IACrB;AACJ"}},
    {"offset": {"line": 889, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 895, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/PerformanceAnalysis.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { AlertCircle, Play } from \"lucide-react\"\nimport { benchmarkInference, type PerformanceMetrics } from '@/lib/performance'\n\ninterface PerformanceAnalysisProps {\n    input: string;\n    method: string;\n}\n\nexport default function PerformanceAnalysis({ input, method }: PerformanceAnalysisProps) {\n    const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null)\n    const [isRunning, setIsRunning] = useState(false)\n    const [error, setError] = useState('')\n\n    const runBenchmark = async () => {\n        setIsRunning(true)\n        setError('')\n        try {\n            const results = await benchmarkInference(input, method, 50)\n            setMetrics(results)\n        } catch (err) {\n            setError('Failed to run performance analysis')\n        } finally {\n            setIsRunning(false)\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>Performance Analysis</CardTitle>\n                <CardDescription>\n                    Benchmark the current inference method with multiple iterations\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <div className=\"space-y-4\">\n                    <Button \n                        onClick={runBenchmark} \n                        disabled={isRunning}\n                        className=\"w-full\"\n                    >\n                        {isRunning ? (\n                            \"Running Analysis...\"\n                        ) : (\n                            <>\n                                <Play className=\"mr-2 h-4 w-4\" /> Run Benchmark\n                            </>\n                        )}\n                    </Button>\n\n                    {error && (\n                        <Alert variant=\"destructive\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                            <AlertDescription>{error}</AlertDescription>\n                        </Alert>\n                    )}\n\n                    {metrics && (\n                        <div className=\"grid grid-cols-2 gap-4\">\n                            <div className=\"space-y-2\">\n                                <p className=\"text-sm font-medium\">Average Time</p>\n                                <p className=\"text-2xl font-bold\">\n                                    {metrics.averageTime.toFixed(2)}ms\n                                </p>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <p className=\"text-sm font-medium\">Success Rate</p>\n                                <p className=\"text-2xl font-bold\">\n                                    {metrics.successRate.toFixed(1)}%\n                                </p>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <p className=\"text-sm font-medium\">Min Time</p>\n                                <p className=\"text-2xl font-bold\">\n                                    {metrics.minTime.toFixed(2)}ms\n                                </p>\n                            </div>\n                            <div className=\"space-y-2\">\n                                <p className=\"text-sm font-medium\">Max Time</p>\n                                <p className=\"text-2xl font-bold\">\n                                    {metrics.maxTime.toFixed(2)}ms\n                                </p>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </CardContent>\n        </Card>\n    )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;AADA;AAAA;AANA;;;;;;;;AAce,SAAS,oBAAoB,EAAE,KAAK,EAAE,MAAM,EAA4B;IACnF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA6B;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe;QACjB,aAAa;QACb,SAAS;QACT,IAAI;YACA,MAAM,UAAU,MAAM,CAAA,GAAA,yHAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,QAAQ;YACxD,WAAW;QACf,EAAE,OAAO,KAAK;YACV,SAAS;QACb,SAAU;YACN,aAAa;QACjB;IACJ;IAEA,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;;kCACP,8OAAC,gIAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,gIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAIrB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,kIAAA,CAAA,SAAM;4BACH,SAAS;4BACT,UAAU;4BACV,WAAU;sCAET,YACG,sCAEA;;kDACI,8OAAC,kMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;wBAK5C,uBACG,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;;8CACX,8OAAC,oNAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;8CACvB,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAI1B,yBACG,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAE,WAAU;sDAAsB;;;;;;sDACnC,8OAAC;4CAAE,WAAU;;gDACR,QAAQ,WAAW,CAAC,OAAO,CAAC;gDAAG;;;;;;;;;;;;;8CAGxC,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAE,WAAU;sDAAsB;;;;;;sDACnC,8OAAC;4CAAE,WAAU;;gDACR,QAAQ,WAAW,CAAC,OAAO,CAAC;gDAAG;;;;;;;;;;;;;8CAGxC,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAE,WAAU;sDAAsB;;;;;;sDACnC,8OAAC;4CAAE,WAAU;;gDACR,QAAQ,OAAO,CAAC,OAAO,CAAC;gDAAG;;;;;;;;;;;;;8CAGpC,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAE,WAAU;sDAAsB;;;;;;sDACnC,8OAAC;4CAAE,WAAU;;gDACR,QAAQ,OAAO,CAAC,OAAO,CAAC;gDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAShE"}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":["file:///Users/truongngochuyen/Downloads/Assignment2-COS30019-main%20copy/src/components/InferenceForm.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef } from 'react'\nimport { Button } from \"@/components/ui/button\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { AlertCircle, History, Download, Upload, Sun, Moon, Play, Database, Share2 } from \"lucide-react\"\nimport { useTheme } from \"next-themes\"\nimport KnowledgeBaseGraph from './KnowledgeBaseGraph'\nimport PerformanceAnalysis from './PerformanceAnalysis'\n\nconst EXAMPLE_QUERIES = [\n    {\n        name: \"Simple Horn Clauses\",\n        description: \"Basic example with simple Horn clauses and facts\",\n        content: `TELL\np2=> p3; p3 => p1; c => e; b&e => f; f&g => h; p2&p1&p3 =>d; p1&p3 => c; a; b; p2;\n\nASK\nd`\n    },\n    {\n        name: \"Complex Chain\",\n        description: \"Example demonstrating a longer inference chain\",\n        content: `TELL\np1 => p2; p2 => p3; p3 => p4; p4 => p5; p1;\n\nASK\np5`\n    }\n]\n\nexport default function InferenceForm() {\n    const [input, setInput] = useState(EXAMPLE_QUERIES[0].content)\n    const [method, setMethod] = useState('TT')\n    const [result, setResult] = useState('')\n    const [error, setError] = useState('')\n    const [history, setHistory] = useState<Array<{ input: string, method: string, result: string }>>([])\n    const { theme, setTheme } = useTheme()\n    const [activeTab, setActiveTab] = useState('input')\n    const [isProcessing, setIsProcessing] = useState(false)\n    const fileInputRef = useRef<HTMLInputElement>(null)\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault()\n        setError('')\n        setIsProcessing(true)\n        try {\n            const response = await fetch('/api/infer', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ input, method }),\n            })\n            if (!response.ok) throw new Error('Network response was not ok')\n            const data = await response.json()\n            setResult(data.result)\n            setHistory(prev => [...prev, { input, method, result: data.result }])\n            setActiveTab('result')\n        } catch (err) {\n            setError('An error occurred while processing your request. Please try again.')\n        } finally {\n            setIsProcessing(false)\n        }\n    }\n\n    const handleExport = () => {\n        const content = `Input:\\n${input}\\n\\nMethod: ${method}\\n\\nResult:\\n${result}`\n        const blob = new Blob([content], { type: 'text/plain' })\n        const url = URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = 'inference-result.txt'\n        a.click()\n    }\n\n    const handleFileUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.[0]\n        if (!file) return\n\n        if (file.type === 'text/plain') {\n            const reader = new FileReader()\n            reader.onload = (e) => {\n                try {\n                    const content = e.target?.result as string\n                    setInput(content)\n                } catch (err) {\n                    setError('Invalid file format')\n                }\n            }\n            reader.readAsText(file)\n        } else {\n            setError('Unsupported file type. Please upload a .txt file only.')\n        }\n    }\n\n    return (\n        <div className=\"bg-background text-foreground\">\n            <div className=\"flex justify-between items-center mb-6\">\n                <div className=\"flex gap-2\">\n                    <Button\n                        variant=\"outline\"\n                        size=\"icon\"\n                        onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n                        className=\"dark:bg-slate-800 dark:hover:bg-slate-700 dark:border-slate-700\"\n                    >\n                        {theme === 'dark' ? (\n                            <Sun className=\"h-4 w-4 transition-all\" />\n                        ) : (\n                            <Moon className=\"h-4 w-4 transition-all\" />\n                        )}\n                    </Button>\n                    <Button variant=\"outline\" size=\"icon\" onClick={handleExport}>\n                        <Download className=\"h-4 w-4\" />\n                    </Button>\n                    <Button variant=\"outline\" size=\"icon\" onClick={() => fileInputRef.current?.click()}>\n                        <Upload className=\"h-4 w-4\" />\n                    </Button>\n                    <input\n                        type=\"file\"\n                        hidden\n                        ref={fileInputRef}\n                        onChange={handleFileUpload}\n                        accept=\".txt\"\n                    />\n                </div>\n            </div>\n\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n                <TabsList className=\"bg-muted/50 p-1\">\n                    <TabsTrigger\n                        value=\"input\"\n                        className=\"data-[state=active]:bg-background dark:data-[state=active]:bg-slate-800\"\n                    >\n                        Input\n                    </TabsTrigger>\n                    <TabsTrigger\n                        value=\"visualization\"\n                        className=\"data-[state=active]:bg-background dark:data-[state=active]:bg-slate-800\"\n                    >\n                        Visualization\n                    </TabsTrigger>\n                    <TabsTrigger\n                        value=\"result\"\n                        className=\"data-[state=active]:bg-background dark:data-[state=active]:bg-slate-800\"\n                    >\n                        Result\n                    </TabsTrigger>\n                    <TabsTrigger\n                        value=\"performance\"\n                        className=\"data-[state=active]:bg-background dark:data-[state=active]:bg-slate-800\"\n                    >\n                        Performance\n                    </TabsTrigger>\n                    <TabsTrigger\n                        value=\"history\"\n                        className=\"data-[state=active]:bg-background dark:data-[state=active]:bg-slate-800\"\n                    >\n                        History\n                    </TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"input\">\n                    <form onSubmit={handleSubmit}>\n                        <Card className=\"border-muted bg-card dark:bg-slate-900 dark:border-slate-800\">\n                            <CardHeader>\n                                <CardTitle className=\"text-foreground\">Knowledge Base and Query</CardTitle>\n                                <CardDescription className=\"dark:text-slate-400\">\n                                    Enter your knowledge base after the TELL keyword and your query after the ASK keyword\n                                </CardDescription>\n                            </CardHeader>\n                            <CardContent>\n                                <div className=\"flex gap-4 mb-4\">\n                                    <TooltipProvider>\n                                        {EXAMPLE_QUERIES.map((example, index) => (\n                                            <Tooltip key={index}>\n                                                <TooltipTrigger asChild>\n                                                    <Button\n                                                        variant=\"outline\"\n                                                        onClick={() => {\n                                                            setInput(example.content)\n                                                            setActiveTab('input')  // Switch to input tab\n                                                        }}\n                                                        className=\"dark:bg-slate-800 dark:hover:bg-slate-700 dark:border-slate-700\"\n                                                    >\n                                                        Load {example.name}\n                                                    </Button>\n                                                </TooltipTrigger>\n                                                <TooltipContent>\n                                                    <p>{example.description}</p>\n                                                </TooltipContent>\n                                            </Tooltip>\n                                        ))}\n                                    </TooltipProvider>\n                                </div>\n                                <Textarea\n                                    value={input}\n                                    onChange={(e) => setInput(e.target.value)}\n                                    className=\"mb-4 font-mono bg-background dark:bg-slate-800 dark:border-slate-700 dark:text-slate-100\"\n                                    rows={10}\n                                />\n                                <div className=\"mb-4\">\n                                    <h3 className=\"text-lg font-semibold mb-2 dark:text-slate-100\">Inference Method</h3>\n                                    <RadioGroup value={method} onValueChange={setMethod}>\n                                        <div className=\"flex items-center space-x-2\">\n                                            <RadioGroupItem value=\"TT\" id=\"TT\" />\n                                            <Label htmlFor=\"TT\" className=\"dark:text-slate-200\">Truth Table (TT)</Label>\n                                        </div>\n                                        <div className=\"flex items-center space-x-2\">\n                                            <RadioGroupItem value=\"FC\" id=\"FC\" />\n                                            <Label htmlFor=\"FC\" className=\"dark:text-slate-200\">Forward Chaining (FC)</Label>\n                                        </div>\n                                        <div className=\"flex items-center space-x-2\">\n                                            <RadioGroupItem value=\"BC\" id=\"BC\" />\n                                            <Label htmlFor=\"BC\" className=\"dark:text-slate-200\">Backward Chaining (BC)</Label>\n                                        </div>\n                                    </RadioGroup>\n                                </div>\n                                <div className=\"flex gap-2\">\n                                    <Button\n                                        type=\"submit\"\n                                        disabled={isProcessing}\n                                        className=\"flex-1 dark:bg-blue-600 dark:hover:bg-blue-700 dark:text-white\"\n                                    >\n                                        {isProcessing ? (\n                                            \"Processing...\"\n                                        ) : (\n                                            <>\n                                                <Play className=\"mr-2 h-4 w-4\" /> Infer\n                                            </>\n                                        )}\n                                    </Button>\n                                    <Button\n                                        type=\"button\"\n                                        onClick={() => setActiveTab('performance')}\n                                        variant=\"outline\"\n                                        className=\"dark:bg-slate-800 dark:hover:bg-slate-700 dark:border-slate-700\"\n                                    >\n                                        <Database className=\"mr-2 h-4 w-4\" /> Benchmark\n                                    </Button>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </form>\n                </TabsContent>\n\n                <TabsContent value=\"visualization\">\n                    <Card className=\"border-muted bg-card dark:bg-slate-900 dark:border-slate-800\">\n                        <CardHeader>\n                            <CardTitle className=\"text-foreground\">Knowledge Base Visualization</CardTitle>\n                            <CardDescription className=\"dark:text-slate-400\">Visual representation of the knowledge base as a graph</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                            <KnowledgeBaseGraph input={input} />\n                        </CardContent>\n                    </Card>\n                </TabsContent>\n\n                <TabsContent value=\"result\">\n                    {error && (\n                        <Alert variant=\"destructive\" className=\"mb-6\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                            <AlertDescription>{error}</AlertDescription>\n                        </Alert>\n                    )}\n                    {result && (\n                        <Card className=\"border-muted bg-card dark:bg-slate-900 dark:border-slate-800\">\n                            <CardHeader>\n                                <CardTitle className=\"flex justify-between items-center text-foreground\">\n                                    Result\n                                    <Share2 className=\"h-4 w-4\" />\n                                </CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                                <pre className=\"bg-muted p-4 rounded-md overflow-x-auto dark:bg-slate-800 dark:text-slate-100\">{result}</pre>\n                            </CardContent>\n                        </Card>\n                    )}\n                </TabsContent>\n\n                <TabsContent value=\"history\">\n                    <Card className=\"border-muted bg-card dark:bg-slate-900 dark:border-slate-800\">\n                        <CardHeader>\n                            <CardTitle className=\"flex justify-between items-center text-foreground\">\n                                Query History\n                                <History className=\"h-4 w-4\" />\n                            </CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            {history.length === 0 ? (\n                                <p className=\"text-muted-foreground dark:text-slate-400\">No queries yet</p>\n                            ) : (\n                                <div className=\"space-y-4\">\n                                    {history.slice().reverse().map((item, index) => (\n                                        <Card \n                                            key={`${item.input}-${item.method}-${index}`} \n                                            className=\"bg-card dark:bg-slate-800 dark:border-slate-700\"\n                                        >\n                                            <CardHeader>\n                                                <CardTitle className=\"text-sm text-foreground\">Query #{index + 1}</CardTitle>\n                                            </CardHeader>\n                                            <CardContent>\n                                                <div className=\"grid gap-2\">\n                                                    <div className=\"font-mono text-sm bg-muted p-2 rounded dark:bg-slate-700 dark:text-slate-100\">\n                                                        {item.input}\n                                                    </div>\n                                                    <div className=\"flex items-center gap-2 dark:text-slate-200\">\n                                                        <Database className=\"h-4 w-4\" />\n                                                        <span className=\"text-sm\">Method: {item.method}</span>\n                                                    </div>\n                                                    <div className=\"font-mono text-sm bg-muted p-2 rounded dark:bg-slate-700 dark:text-slate-100\">\n                                                        {item.result}\n                                                    </div>\n                                                </div>\n                                            </CardContent>\n                                        </Card>\n                                    ))}\n                                </div>\n                            )}\n                        </CardContent>\n                    </Card>\n                </TabsContent>\n                <TabsContent value=\"performance\">\n                    <PerformanceAnalysis input={input} method={method} />\n                </TabsContent>\n            </Tabs>\n        </div>\n    )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}